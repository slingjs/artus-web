version: '3'

networks:
  sling-web-net:
    driver: bridge

services:
  mongo-0:
    image: mongo:latest
    container_name: mongo-0
    command: >
      mongod
      --replSet rs0
      --bind_ip localhost,mongo-0
    ports:
      - ${MONGO0_PORT:-27017}:27017
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    networks:
      - sling-web-net
  mongo-1:
    image: mongo:latest
    container_name: mongo-1
    command: >
      mongod
      --replSet rs0
      --bind_ip localhost,mongo-1
    ports:
      - ${MONGO1_PORT:-27018}:27017
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    networks:
      - sling-web-net
  mongo-2:
    image: mongo:latest
    container_name: mongo-2
    command: >
      mongod
      --replSet rs0
      --bind_ip localhost,mongo-2
    ports:
      - ${MONGO0_PORT:-27019}:27017
    restart: unless-stopped
    networks:
      - sling-web-net
  mongo-rs-init:
    image: mongo:latest
    container_name: mongo-rs-init
    depends_on:
      - mongo-0
      - mongo-1
      - mongo-2
    entrypoint: [ "docker-mongo-entrypoint.sh" ]
    environment:
      TZ: Asia/Shanghai
    restart: on-failure
    volumes:
      - ./docker-mongo-entrypoint.sh:/usr/local/bin/docker-mongo-entrypoint.sh:ro
    networks:
      - sling-web-net
  redis:
    image: redis:latest
    container_name: sling-web-redis
    restart: always
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "6379:6379"
    command:
      - /bin/bash
      - -c
      - redis-server --appendonly yes --requirepass "123456"
    networks:
      - sling-web-net
  app:
    build:
      context: .
    container_name: app
    ports:
      - "9527:9527"
    restart: always
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - mongo-rs-init
      - redis
    networks:
      - sling-web-net
    volumes:
      - .:/app
      - /app/node_modules
